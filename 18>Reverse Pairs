#include <bits/stdc++.h>
int merge(vector<int>&arr,int l,int m,int r)
{
    int count=0;
    int j = m+1; 
    for(int i=l;i<=m;i++)
    {
        while(j<=r&&arr[i]>(2LL*arr[j]))
        {
            j++;
        }
        count+=(j-(m+1));
    }
    vector<int>temp;
    int i=l;
    j=m+1;
    while(i<=m&&j<=r)
    {
        if (arr[i]<=arr[j]) 
        {
            temp.push_back(arr[i++]);
        }
        else 
        {
            temp.push_back(arr[j++]);
        }
    }
    while (i<=m)
        temp.push_back(arr[i++]);
    while(j<=r)
        temp.push_back(arr[j++]);
    for(i=l;i<=r;i++)
        arr[i]=temp[i-l];
    return count;
}
int mergeSort(vector<int>&arr,int l,int r)
{
    int m,count = 0;
    if (l>=r)
        return 0;
        m=(r+l)/2;
        count += mergeSort(arr,l,m);
        count += mergeSort(arr,m+1,r);
        count += merge(arr,l,m,r);
    
    return count;
} 
int reversePairs(vector<int> &arr, int n)
{
    return mergeSort(arr,0,n-1);
}
